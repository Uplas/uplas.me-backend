# .github/workflows/django-ci.yml
name: Django CI with MySQL

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"] # Focus on one primary version

    # --- Add MySQL Service Container ---
    services:
      mysql:
        image: mysql:8.0 # Use a specific MySQL version
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_TEST_ROOT_PASSWORD }} # ADD this secret
          MYSQL_DATABASE: test_uplas_db
        ports:
          - 3306:3306 # Map container port to host port (for the runner)
        options: >-
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Updated to v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4 # Updated to v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Keep this for caching pip dependencies

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y default-libmysqlclient-dev gcc python3-dev # Ensure mysqlclient build tools

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Django Tests with MySQL
      env:
        # --- Essential ---
        SECRET_KEY: ${{ secrets.DJANGO_TEST_SECRET_KEY }}
        DJANGO_DEBUG: "True"
        # --- Use MySQL Service for CI Tests ---
        DB_ENGINE: "django.db.backends.mysql"
        DB_NAME: "test_uplas_db"
        DB_USER: "root" # Use the root user for the test DB service
        DB_PASSWORD: ${{ secrets.MYSQL_TEST_ROOT_PASSWORD }}
        DB_HOST: "127.0.0.1" # The service is mapped to the runner's localhost
        DB_PORT: "3306"
        # --- Dummy variables ---
        DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1"
        STRIPE_SECRET_KEY: "dummy_stripe_key"
        AI_NLP_TUTOR_SERVICE_URL: "http://dummy.url"
        AI_TTS_SERVICE_URL: "http://dummy.url"
        AI_TTV_SERVICE_URL: "http://dummy.url"
        AI_PROJECT_GENERATOR_SERVICE_URL: "http://dummy.url"
        AI_PROJECT_ASSESSMENT_SERVICE_URL: "http://dummy.url"
        AI_SERVICE_API_KEY: "dummy_ai_key"
        GS_BUCKET_NAME: "dummy-test-bucket" # Required if django-storages is always used

      run: |
        # Wait a few seconds to ensure MySQL is fully ready (optional but can help)
        sleep 10
        python manage.py makemigrations --noinput # Generate any pending migrations
        python manage.py migrate --noinput # Apply migrations to the test DB
        python manage.py test # Run ALL tests
