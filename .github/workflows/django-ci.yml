# .github/workflows/django-ci.yml
name: Django CI with MySQL

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"] # ALIGNED with Dockerfile

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_TEST_ROOT_PASSWORD }}
          MYSQL_DATABASE: test_uplas_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y default-libmysqlclient-dev gcc python3-dev

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Django Tests
      env:
        # --- Essential ---
        SECRET_KEY: ${{ secrets.DJANGO_TEST_SECRET_KEY }}
        DJANGO_DEBUG: "True"
        # --- Use MySQL Service for CI Tests ---
        DB_ENGINE: "django.db.backends.mysql"
        DB_NAME: "test_uplas_db"
        DB_USER: "root"
        DB_PASSWORD: ${{ secrets.MYSQL_TEST_ROOT_PASSWORD }}
        DB_HOST: "127.0.0.1"
        DB_PORT: "3306"
        # --- Dummy variables ---
        DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1"
        GS_BUCKET_NAME: "dummy-gcs-bucket"
        STRIPE_SECRET_KEY: "dummy_stripe_key"
        AI_NLP_TUTOR_SERVICE_URL: "http://dummy.url"
        AI_TTS_SERVICE_URL: "http://dummy.url"
        AI_TTV_SERVICE_URL: "http://dummy.url"
        AI_PROJECT_GENERATOR_SERVICE_URL: "http://dummy.url"
        AI_PROJECT_ASSESSMENT_SERVICE_URL: "http://dummy.url"
        AI_SERVICE_API_KEY: "dummy_ai_key"
      run: |
        echo "Waiting for MySQL service..."
        # The health check in the service definition handles waiting.
        echo "Running Migrations and Tests..."
        python manage.py migrate --noinput
        python manage.py test apps/
