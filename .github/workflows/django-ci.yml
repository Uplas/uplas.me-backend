name: Django CI with MySQL

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allow manual triggers

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 'test_root_password_123'
          MYSQL_DATABASE: test_uplas_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost --silent"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=20
          --health-start-period=30s

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          default-libmysqlclient-dev \
          gcc \
          python3-dev \
          pkg-config \
          build-essential

    - name: Upgrade pip and install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt

    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL to be ready..."
        for i in {1..30}; do
          if mysqladmin ping -h 127.0.0.1 -P 3306 -u root -ptest_root_password_123 --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL... (attempt $i/30)"
          sleep 2
        done

    - name: Verify MySQL Connection
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -ptest_root_password_123 -e "SHOW DATABASES;"

    - name: Run Django System Check
      env:
        SECRET_KEY: 'django-test-secret-key-for-ci-only-not-for-production-use'
        DJANGO_DEBUG: "True"
        DJANGO_SETTINGS_MODULE: "uplas_project.settings"
        DB_ENGINE: "django.db.backends.mysql"
        DB_NAME: "test_uplas_db"
        DB_USER: "root"
        DB_PASSWORD: "test_root_password_123"
        DB_HOST: "127.0.0.1"
        DB_PORT: "3306"
        DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1"
        GS_BUCKET_NAME: "dummy-gcs-bucket"
        GS_IS_PUBLIC: "False"
        STRIPE_SECRET_KEY: "sk_test_dummy_stripe_key_for_testing"
        STRIPE_WEBHOOK_SECRET: "whsec_dummy_webhook_secret"
        AI_NLP_TUTOR_SERVICE_URL: "http://dummy-nlp.example.com"
        AI_TTS_SERVICE_URL: "http://dummy-tts.example.com"
        AI_TTV_SERVICE_URL: "http://dummy-ttv.example.com"
        AI_PROJECT_GENERATOR_SERVICE_URL: "http://dummy-generator.example.com"
        AI_PROJECT_ASSESSMENT_SERVICE_URL: "http://dummy-assessment.example.com"
        AI_SERVICE_API_KEY: "dummy_ai_service_key_for_testing"
      run: |
        echo "Running Django system check..."
        python manage.py check --deploy

    - name: Run Database Migrations
      env:
        SECRET_KEY: 'django-test-secret-key-for-ci-only-not-for-production-use'
        DJANGO_DEBUG: "True"
        DJANGO_SETTINGS_MODULE: "uplas_project.settings"
        DB_ENGINE: "django.db.backends.mysql"
        DB_NAME: "test_uplas_db"
        DB_USER: "root"
        DB_PASSWORD: "test_root_password_123"
        DB_HOST: "127.0.0.1"
        DB_PORT: "3306"
        DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1"
        GS_BUCKET_NAME: "dummy-gcs-bucket"
        GS_IS_PUBLIC: "False"
        STRIPE_SECRET_KEY: "sk_test_dummy_stripe_key_for_testing"
        STRIPE_WEBHOOK_SECRET: "whsec_dummy_webhook_secret"
        AI_NLP_TUTOR_SERVICE_URL: "http://dummy-nlp.example.com"
        AI_TTS_SERVICE_URL: "http://dummy-tts.example.com"
        AI_TTV_SERVICE_URL: "http://dummy-ttv.example.com"
        AI_PROJECT_GENERATOR_SERVICE_URL: "http://dummy-generator.example.com"
        AI_PROJECT_ASSESSMENT_SERVICE_URL: "http://dummy-assessment.example.com"
        AI_SERVICE_API_KEY: "dummy_ai_service_key_for_testing"
      run: |
        echo "Running database migrations..."
        python manage.py migrate --noinput

    - name: Run Django Tests
      env:
        SECRET_KEY: 'django-test-secret-key-for-ci-only-not-for-production-use'
        DJANGO_DEBUG: "True"
        DJANGO_SETTINGS_MODULE: "uplas_project.settings"
        DB_ENGINE: "django.db.backends.mysql"
        DB_NAME: "test_uplas_db"
        DB_USER: "root"
        DB_PASSWORD: "test_root_password_123"
        DB_HOST: "127.0.0.1"
        DB_PORT: "3306"
        DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1"
        GS_BUCKET_NAME: "dummy-gcs-bucket"
        GS_IS_PUBLIC: "False"
        STRIPE_SECRET_KEY: "sk_test_dummy_stripe_key_for_testing"
        STRIPE_WEBHOOK_SECRET: "whsec_dummy_webhook_secret"
        AI_NLP_TUTOR_SERVICE_URL: "http://dummy-nlp.example.com"
        AI_TTS_SERVICE_URL: "http://dummy-tts.example.com"
        AI_TTV_SERVICE_URL: "http://dummy-ttv.example.com"
        AI_PROJECT_GENERATOR_SERVICE_URL: "http://dummy-generator.example.com"
        AI_PROJECT_ASSESSMENT_SERVICE_URL: "http://dummy-assessment.example.com"
        AI_SERVICE_API_KEY: "dummy_ai_service_key_for_testing"
      run: |
        echo "Running Django tests..."
        # Check if apps directory exists, if not run all tests
        if [ -d "apps" ]; then
          echo "Running tests in apps/ directory..."
          python manage.py test apps/ --verbosity=2
        else
          echo "apps/ directory not found, running all tests..."
          python manage.py test --verbosity=2
        fi

    - name: Generate Test Coverage Report (Optional)
      if: success()
      env:
        SECRET_KEY: 'django-test-secret-key-for-ci-only-not-for-production-use'
        DJANGO_DEBUG: "True"
        DJANGO_SETTINGS_MODULE: "uplas_project.settings"
        DB_ENGINE: "django.db.backends.mysql"
        DB_NAME: "test_uplas_db"
        DB_USER: "root"
        DB_PASSWORD: "test_root_password_123"
        DB_HOST: "127.0.0.1"
        DB_PORT: "3306"
        DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1"
        GS_BUCKET_NAME: "dummy-gcs-bucket"
        GS_IS_PUBLIC: "False"
        STRIPE_SECRET_KEY: "sk_test_dummy_stripe_key_for_testing"
        STRIPE_WEBHOOK_SECRET: "whsec_dummy_webhook_secret"
        AI_NLP_TUTOR_SERVICE_URL: "http://dummy-nlp.example.com"
        AI_TTS_SERVICE_URL: "http://dummy-tts.example.com"
        AI_TTV_SERVICE_URL: "http://dummy-ttv.example.com"
        AI_PROJECT_GENERATOR_SERVICE_URL: "http://dummy-generator.example.com"
        AI_PROJECT_ASSESSMENT_SERVICE_URL: "http://dummy-assessment.example.com"
        AI_SERVICE_API_KEY: "dummy_ai_service_key_for_testing"
      run: |
        echo "âœ… All tests passed successfully!"
        echo "ðŸ“Š Test execution completed"