# .github/workflows/django-deploy-gcp.yml
name: Deploy Django Backend to GCP Cloud Run

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SERVICE_NAME: uplas-backend
  GCP_REGION: ${{ secrets.GCP_REGION }}
  INSTANCE_CONNECTION_NAME: ${{ secrets.PROD_INSTANCE_CONNECTION_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet

    - name: Build and Push Docker image
      env:
        IMAGE_NAME: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/uplas-images/${{ env.GCP_SERVICE_NAME }}:${{ github.sha }}
      run: |-
        docker build --tag "${{ env.IMAGE_NAME }}" . # Requires Dockerfile
        docker push "${{ env.IMAGE_NAME }}"

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.GCP_SERVICE_NAME }}
        region: ${{ env.GCP_REGION }}
        image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/uplas-images/${{ env.GCP_SERVICE_NAME }}:${{ github.sha }}
        env_vars: |
          DJANGO_SETTINGS_MODULE=uplas_project.settings
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_PROD_SECRET_KEY }}
          DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_PROD_ALLOWED_HOSTS }}
          DJANGO_DEBUG=False
          DB_NAME=${{ secrets.PROD_DB_NAME }}
          DB_USER=${{ secrets.PROD_DB_USER }}
          DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}
          DB_HOST=/cloudsql/${{ env.INSTANCE_CONNECTION_NAME }}
          GS_BUCKET_NAME=${{ secrets.GS_PROD_BUCKET_NAME }}
          STRIPE_SECRET_KEY=${{ secrets.STRIPE_PROD_SECRET_KEY }}
          AI_NLP_TUTOR_SERVICE_URL=${{ secrets.AI_NLP_TUTOR_SERVICE_URL }}
          AI_TTS_SERVICE_URL=${{ secrets.AI_TTS_SERVICE_URL }}
          AI_TTV_SERVICE_URL=${{ secrets.AI_TTV_SERVICE_URL }}
          AI_PROJECT_GENERATOR_SERVICE_URL=${{ secrets.AI_PROJECT_GENERATOR_SERVICE_URL }}
          AI_PROJECT_ASSESSMENT_SERVICE_URL=${{ secrets.AI_PROJECT_ASSESSMENT_SERVICE_URL }}
          AI_SERVICE_API_KEY=${{ secrets.AI_SERVICE_API_KEY }}
        flags: '--allow-unauthenticated --platform managed --set-cloudsql-instances=${{ env.INSTANCE_CONNECTION_NAME }}'

    - name: Show Deployed URL
      run: echo "Service deployed to ${{ steps.deploy.outputs.url }}"
