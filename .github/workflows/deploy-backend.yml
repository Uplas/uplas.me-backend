name: Deploy Uplas Backend to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: 'cs-poc-w8pykuyg0mptchb3jfkuhbw'
  GCP_REGION: 'us-central1'
  SERVICE_ACCOUNT_EMAIL: 'github-actions-deployer@cs-poc-w8pykuyg0mptchb3jfkuhbw.iam.gserviceaccount.com'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/772221283576/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
  ARTIFACT_REGISTRY_REPO: 'uplas-images'
  CLOUD_RUN_SERVICE_NAME: 'uplas-me-backend-service'
  IMAGE_NAME: 'uplas.me-backend'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCP_REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          context: .
          file: ./Dockerfile

      - name: Deploy to Cloud Run
        id: deploy_service
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
          region: ${{ env.GCP_REGION }}
          image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          flags: '--cpu-boost --no-cpu-throttling --min-instances=1 --max-instances=3'
          secrets:
            # Format: GITHUB_SECRET_NAME=GCP_SECRET_NAME:VERSION
            - DJANGO_PROD_SECRET_KEY=DJANGO_PROD_SECRET_KEY:latest
            - DJANGO_PROD_ALLOWED_HOSTS=DJANGO_PROD_ALLOWED_HOSTS:latest
            - PROD_DB_NAME=PROD_DB_NAME:latest
            - PROD_DB_USER=PROD_DB_USER:latest
            - PROD_DB_PASSWORD=PROD_DB_PASSWORD:latest
            - INSTANCE_CONNECTION_NAME=INSTANCE_CONNECTION_NAME:latest
            - GS_PROD_BUCKET_NAME=GS_PROD_BUCKET_NAME:latest
            - STRIPE_PROD_SECRET_KEY=STRIPE_PROD_SECRET_KEY:latest
            - STRIPE_WEBHOOK_SECRET=STRIPE_WEBHOOK_SECRET:latest
            - AI_NLP_TUTOR_SERVICE_URL=AI_NLP_TUTOR_SERVICE_URL:latest
            - AI_TTS_SERVICE_URL=AI_TTS_SERVICE_URL:latest
            - AI_TTV_SERVICE_URL=AI_TTV_SERVICE_URL:latest
            - AI_PROJECT_GENERATOR_SERVICE_URL=AI_PROJECT_GENERATOR_SERVICE_URL:latest
            - AI_PROJECT_ASSESSMENT_SERVICE_URL=AI_PROJECT_ASSESSMENT_SERVICE_URL:latest
            - AI_SERVICE_API_KEY=AI_SERVICE_API_KEY:latest
          env_vars:
            # Non-secret environment variables
            - DJANGO_SETTINGS_MODULE=uplas_project.settings
            - DJANGO_DEBUG=False
            - DB_ENGINE=django.db.backends.mysql
            - GS_IS_PUBLIC=False

      - name: Show Deployed URL
        run: echo "Service deployed to ${{ steps.deploy_service.outputs.url }}"