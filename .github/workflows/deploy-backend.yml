name: Deploy Uplas Backend to Cloud Run

on:
  push:
    branches:
      - main # Triggers on pushes to the main branch

env:
  PROJECT_ID: 'cs-poc-w8pykuyg0mptchb3jfkuhbw'
  GCP_REGION: 'us-central1'
  SERVICE_ACCOUNT_EMAIL: 'github-actions-deployer@cs-poc-w8pykuyg0mptchb3jfkuhbw.iam.gserviceaccount.com'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/772221283576/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
  ARTIFACT_REGISTRY_REPO: 'uplas-images'
  CLOUD_RUN_SERVICE_NAME: 'uplas-me-backend-service'
  IMAGE_NAME: 'uplas.me-backend'
  INSTANCE_CONNECTION_NAME: ${{ secrets.INSTANCE_CONNECTION_NAME }} # <-- CRITICAL FIX: Added this

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCP_REGION }}-docker.pkg.dev
          username: _json_key
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          context: .
          file: ./Dockerfile

      - name: Deploy to Cloud Run
        id: deploy_service
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
          image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          region: ${{ env.GCP_REGION }}
          flags: |
            --allow-unauthenticated
            --set-cloudsql-instances=${{ env.INSTANCE_CONNECTION_NAME }}
            --no-cpu-throttling
            --min-instances=1
            --max-instances=5
            --memory=512Mi
            --cpu=1
          env_vars: |
            DJANGO_SETTINGS_MODULE=uplas_project.settings
            DJANGO_SECRET_KEY=${{ secrets.DJANGO_PROD_SECRET_KEY }}
            DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_PROD_ALLOWED_HOSTS }}
            DJANGO_DEBUG=False
            DB_ENGINE=django.db.backends.mysql
            DB_NAME=${{ secrets.PROD_DB_NAME }}
            DB_USER=${{ secrets.PROD_DB_USER }}
            DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}
            DB_HOST=/cloudsql/${{ env.INSTANCE_CONNECTION_NAME }}
            GS_BUCKET_NAME=${{ secrets.GS_PROD_BUCKET_NAME }}
            GS_IS_PUBLIC=${{ secrets.GS_IS_PUBLIC }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_PROD_SECRET_KEY }}
            STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
            AI_NLP_TUTOR_SERVICE_URL=${{ secrets.AI_NLP_TUTOR_SERVICE_URL }}
            AI_TTS_SERVICE_URL=${{ secrets.AI_TTS_SERVICE_URL }}
            AI_TTV_SERVICE_URL=${{ secrets.AI_TTV_SERVICE_URL }}
            AI_PROJECT_GENERATOR_SERVICE_URL=${{ secrets.AI_PROJECT_GENERATOR_SERVICE_URL }}
            AI_PROJECT_ASSESSMENT_SERVICE_URL=${{ secrets.AI_PROJECT_ASSESSMENT_SERVICE_URL }}
            AI_SERVICE_API_KEY=${{ secrets.AI_SERVICE_API_KEY }}

      - name: Show Deployed URL
        run: echo "Service deployed to ${{ steps.deploy_service.outputs.url }}"

  run-migrations:
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        project_id: ${{ env.PROJECT_ID }}
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Run Django Migrations on Cloud Run
      run: |
        gcloud run jobs execute ${{ env.CLOUD_RUN_SERVICE_NAME }}-migrations \
          --region ${{ env.GCP_REGION }} \
          --wait \
          --update-env-vars="DJANGO_SETTINGS_MODULE=uplas_project.settings,DJANGO_SECRET_KEY=${{ secrets.DJANGO_PROD_SECRET_KEY }},DB_ENGINE=django.db.backends.mysql,DB_NAME=${{ secrets.PROD_DB_NAME }},DB_USER=${{ secrets.PROD_DB_USER }},DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }},DB_HOST=/cloudsql/${{ env.INSTANCE_CONNECTION_NAME }}" \
          --task-timeout=600 \
          --image ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --command "python" \
          --args "manage.py","migrate","--noinput"